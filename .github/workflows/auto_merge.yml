name: Automatic PR Merger

on:
  push: {} # update PR when base branch is updated
  status: {} # try to merge when other checks are completed
  pull_request_review: # try to merge after review
    types:
      - submitted
      - edited
      - dismissed
  pull_request: # try to merge if labels have changed (white/black list)
    types:
      - labeled
      - unlabeled

jobs:
  # that's all. two steps are needed - if PR is mergeable according to
  # branch protection rules it will be merged automatically
  # and latest model file is trained & uploaded to Rasa X
  mergepal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: rasahq/merge-pal-action@v0.5.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  training-testing-upload-model:
    name: Training and Testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - id: files
      uses: jitterbit/get-changed-files@v1
    - name: set_training
      if: |
          contains(  steps.files.outputs.all, 'data/' )
          || contains(  steps.files.outputs.all, 'config.yml' )
          || contains(  steps.files.outputs.all, 'domain.yml' )
      run: echo "RUN_TRAINING=true" >> $GITHUB_ENV
    - name: Rasa Train and Test GitHub Action
      if: env.RUN_TRAINING == 'true'
      uses: RasaHQ/rasa-train-test-gha@main
      with:
        rasa_version: '2.1.3-spacy-en'
        test_type: all
        data_validate: true
        cross_validation: true
        publish_summary: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload model
      if: env.RUN_TRAINING == 'true'
      env:
        RASA_X_API_TOKEN: ${{ secrets.RASA_X_API_TOKEN }}
      working-directory: ${{ github.workspace }}
      run: |
        model_path=`ls models/*.tar.gz | head -n 1`
        curl -k -F "model=@${model_path}" "https://website-demo.rasa.com/api/projects/default/models?api_token=${RASA_X_API_TOKEN}"
