
name: Build and Deploy
on: [pull_request]

jobs:
  lint-testing:
    name: Code Formatting Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade "pip<20"
        pip install -r requirements-dev.txt
    - name: Code Formatting Tests
      working-directory: ${{ github.workspace }}
      run: |
        make lint
  type-testing:
    name: Type Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade "pip<20"
        pip install -r requirements-dev.txt
    - name: Type Checking
      working-directory: ${{ github.workspace }}
      run: |
        make types
  training-testing:
    name: Training and Testing
    runs-on: ubuntu-latest
    needs: [lint-testing, type-testing]
    steps:
      - uses: actions/checkout@v1
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: set_training
        if: |
            contains(  steps.files.outputs.all, 'data/' )
            || contains(  steps.files.outputs.all, 'config.yml' )
            || contains(  steps.files.outputs.all, 'domain.yml' )
        run: echo "RUN_TRAINING=true" >> $GITHUB_ENV
      - name: Rasa Train and Test GitHub Action
        if: env.RUN_TRAINING == 'true'
        uses: RasaHQ/rasa-train-test-gha@main
        with:
          rasa_version: '2.1.3-spacy-en'
          test_type: all
          data_validate: true
          cross_validation: true
          publish_summary: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload model
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@master
        with:
          name: model
          path: models

  build-images:
    name: Build and Push Images
    needs: [lint-testing, type-testing, training-testing]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - id: files
      uses: jitterbit/get-changed-files@v1
    - name: set_actions
      if: |
        contains(  steps.files.outputs.all, 'actions/' )
        || contains(  steps.files.outputs.all, 'Dockerfile' )
      run: echo "ACTIONS_CHANGED=true" >> $GITHUB_ENV
    - name: Authenticate into Google Cloud Platform
      if: env.ACTIONS_CHANGED == 'true'
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '275.0.0'
        service_account_key: ${{ secrets.GCLOUD_AUTH }}
    - name: Configure Docker to use Google Cloud Platform
      if: env.ACTIONS_CHANGED == 'true'
      run: |
        gcloud auth configure-docker
    - name: Pull Latest Image
      if: env.ACTIONS_CHANGED == 'true'
      run: |
        docker pull gcr.io/replicated-test/rasa-demo:latest || true
    - name: Build Image
      if: env.ACTIONS_CHANGED == 'true'
      run: |
        docker build --cache-from gcr.io/replicated-test/rasa-demo:latest .

  mergepal-merge: # run merge pal in the end
    runs-on: ubuntu-latest
    needs: [lint-testing, type-testing, training-testing, build-images]
    steps:
      - uses: actions/checkout@v1
      - uses: rasahq/merge-pal-action@v0.5.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
